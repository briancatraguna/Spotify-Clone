{"ast":null,"code":"var _jsxFileName = \"/Users/dennyrthaher/Documents/generasi-gigih-homework/my-app/src/pages/HomePage.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport SectionTitle from '../components/SectionTitle/index';\nimport SongItem from '../components/SongItem/index';\nimport SearchBar from '../components/SearchBar/index';\nimport CreatePlaylistForm from '../components/CreatePlaylistForm/index';\nimport axios from 'axios';\nimport './style.css';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst HomePage = () => {\n  _s();\n\n  const {\n    accessTokenBearer\n  } = useSelector(state => state.token);\n  const initialData = null;\n  const [data, setData] = useState(initialData);\n  const [selectedList, setSelectedList] = useState([\"\"]);\n  const [userId, setUserId] = useState(\"\");\n\n  const getData = data => {\n    setData(data);\n  };\n\n  const pushToSelectedList = id => {\n    const currentList = selectedList;\n    currentList.push(id);\n    setSelectedList(currentList);\n  };\n\n  const deleteFromSelectedList = id => {\n    const currentList = selectedList;\n\n    for (var i = 0; i < selectedList.length; i++) {\n      if (selectedList[i] === id) {\n        currentList.splice(i, 1);\n      }\n    }\n\n    setSelectedList(currentList);\n  };\n\n  const getStatus = id => {\n    let status = false;\n\n    for (var i = 0; i < selectedList.length; i++) {\n      if (selectedList[i] === id) {\n        status = true;\n      }\n    }\n\n    return status;\n  };\n\n  const getCurrentUserId = async () => {\n    try {\n      const response = await axios.get(\"https://api.spotify.com/v1/me?\", {\n        headers: {\n          Authorization: accessTokenBearer\n        }\n      });\n      setUserId(response.data.id);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  let listData;\n\n  if (data != null) {\n    listData = data.tracks.items.map(item => {\n      const status = getStatus(item.uri);\n      return /*#__PURE__*/_jsxDEV(SongItem, {\n        imgUrl: item.album.images[0].url,\n        songTitle: item.album.name,\n        artist: item.artists[0].name,\n        artistLink: item.artists[0].external_urls.spotify,\n        id: item.uri,\n        status: status,\n        pushToSelectedList: pushToSelectedList,\n        deleteFromSelectedList: deleteFromSelectedList\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this);\n    });\n  }\n\n  getCurrentUserId();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(CreatePlaylistForm, {\n      userId: userId,\n      selectedTracks: selectedList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SectionTitle, {\n      title: \"Search your favorite albums!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n      getData: getData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-container\",\n      children: listData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n};\n\n_s(HomePage, \"PFYueuZFM11UfKzP6CePDeVM8wg=\", false, function () {\n  return [useSelector];\n});\n\n_c = HomePage;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/Users/dennyrthaher/Documents/generasi-gigih-homework/my-app/src/pages/HomePage.tsx"],"names":["React","useState","SectionTitle","SongItem","SearchBar","CreatePlaylistForm","axios","useSelector","HomePage","accessTokenBearer","state","token","initialData","data","setData","selectedList","setSelectedList","userId","setUserId","getData","pushToSelectedList","id","currentList","push","deleteFromSelectedList","i","length","splice","getStatus","status","getCurrentUserId","response","get","headers","Authorization","error","console","listData","tracks","items","map","item","uri","album","images","url","name","artists","external_urls","spotify"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nimport SectionTitle from '../components/SectionTitle/index';\nimport SongItem from '../components/SongItem/index';\nimport SearchBar from '../components/SearchBar/index';\nimport CreatePlaylistForm from '../components/CreatePlaylistForm/index';\nimport axios, { AxiosResponse } from 'axios';\nimport './style.css';\nimport { useSelector } from 'react-redux';\n\nconst HomePage = () => {\n    \n    const {accessTokenBearer} = useSelector((state: any) => state.token)\n\n    const initialData: any = null\n    const [data,setData] = useState(initialData);\n    const [selectedList,setSelectedList] = useState([\"\"]);\n    const [userId,setUserId] = useState(\"\");\n\n    const getData = (data: any) => {\n        setData(data);\n    }\n\n    const pushToSelectedList = (id: string) => {\n        const currentList: string[] = selectedList;\n        currentList.push(id);\n        setSelectedList(currentList);\n    }\n\n    const deleteFromSelectedList = (id: string) => {\n        const currentList: string[] = selectedList;\n        for (var i = 0;i<selectedList.length;i++){\n            if (selectedList[i] === id){\n                currentList.splice(i,1);\n            }\n        }\n        setSelectedList(currentList);\n    }\n\n    const getStatus = (id: string) => {\n        let status: boolean = false;\n        for (var i = 0;i<selectedList.length;i++){\n            if (selectedList[i] === id){\n                status = true\n            }\n        }\n        return status;\n    }\n\n    const getCurrentUserId = async() => {\n        try {\n            const response: AxiosResponse<any> = await axios.get(\"https://api.spotify.com/v1/me?\",{\n                headers: {\n                    Authorization: accessTokenBearer,\n                }\n            })\n            setUserId(response.data.id)\n        } catch(error){\n            console.error(error);\n        }\n    }\n\n    let listData;\n    if (data != null){\n        listData = data.tracks.items.map((item: any)=>{\n            const status = getStatus(item.uri)\n            return (\n                <SongItem\n                    key = {item.id}\n                    imgUrl = {item.album.images[0].url}\n                    songTitle = {item.album.name}\n                    artist = {item.artists[0].name}\n                    artistLink = {item.artists[0].external_urls.spotify}\n                    id = {item.uri}\n                    status = {status}\n                    pushToSelectedList = {pushToSelectedList}\n                    deleteFromSelectedList = {deleteFromSelectedList}\n                />\n            )\n        })\n    }\n\n    getCurrentUserId();\n    return(\n        <div className=\"App\">\n            <CreatePlaylistForm userId={userId} selectedTracks={selectedList}></CreatePlaylistForm>\n            <SectionTitle title=\"Search your favorite albums!\"/>\n            <br></br>\n            <SearchBar getData={getData}></SearchBar>\n            <br></br>\n\n            <div className=\"grid-container\">\n                {listData}\n            </div>\n            \n        </div>\n    );\n}\n\nexport default HomePage;"]},"metadata":{},"sourceType":"module"}