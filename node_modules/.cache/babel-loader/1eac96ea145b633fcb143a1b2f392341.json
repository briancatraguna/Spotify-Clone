{"ast":null,"code":"var _jsxFileName = \"/Users/dennyrthaher/Documents/generasi-gigih-homework/my-app/src/components/CreatePlaylistForm/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport './style.css';\nimport axios from 'axios';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Button, TextField } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreatePlaylistForm = ({\n  userId,\n  selectedTracks\n}) => {\n  _s();\n\n  const {\n    accessTokenBearer\n  } = useSelector(state => state.token);\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      const endpoint = `https://api.spotify.com/v1/users/${userId}/playlists`;\n      const response = await axios.post(endpoint, {\n        name: title,\n        description: description,\n        collaborative: false,\n        public: false\n      }, {\n        headers: {\n          'Authorization': accessTokenBearer,\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n      const id = response.data.id;\n      await axios({\n        method: 'post',\n        url: `https://api.spotify.com/v1/playlists/${id}/tracks`,\n        data: {\n          uris: selectedTracks\n        },\n        headers: {\n          'Authorization': accessTokenBearer,\n          \"Accept\": \"application/json\",\n          \"Content-Type\": \"application/json\"\n        }\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleTitle = e => {\n    setTitle(e.target.value);\n  };\n\n  const handleDescription = e => {\n    setDescription(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Create Playlist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        className: \"textField\",\n        variant: \"outlined\",\n        label: \"Title\",\n        onChange: handleTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        className: \"textField\",\n        variant: \"outlined\",\n        label: \"Description\",\n        onChange: handleDescription\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"primary\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CreatePlaylistForm, \"v4eSwmwoOlXdRG5a+mCM9/Hsipo=\", false, function () {\n  return [useSelector];\n});\n\n_c = CreatePlaylistForm;\nexport default CreatePlaylistForm;\nCreatePlaylistForm.propTypes = {\n  userId: PropTypes.string,\n  selectedTracks: PropTypes.array\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatePlaylistForm\");","map":{"version":3,"sources":["/Users/dennyrthaher/Documents/generasi-gigih-homework/my-app/src/components/CreatePlaylistForm/index.tsx"],"names":["React","useState","axios","useSelector","PropTypes","Button","TextField","CreatePlaylistForm","userId","selectedTracks","accessTokenBearer","state","token","title","setTitle","description","setDescription","handleSubmit","e","preventDefault","endpoint","response","post","name","collaborative","public","headers","id","data","method","url","uris","error","console","handleTitle","target","value","handleDescription","propTypes","string","array"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nimport './style.css';\nimport axios, { AxiosResponse } from 'axios';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Button, TextField } from '@material-ui/core';\n\ntype Props = {\n    userId: string,\n    selectedTracks: Array<string>\n}\n\nconst CreatePlaylistForm = ({userId,selectedTracks}: Props) => {\n\n    const {accessTokenBearer} = useSelector((state: any) => state.token)\n\n    const [title,setTitle] = useState(\"\");\n    const [description,setDescription] = useState(\"\");\n\n    const handleSubmit = async (e: React.ChangeEvent<any>) => {\n        e.preventDefault();\n        try {\n            const endpoint: string = `https://api.spotify.com/v1/users/${userId}/playlists`;\n            const response: AxiosResponse<any> = await axios.post(endpoint,{\n                name: title,\n                description: description,\n                collaborative: false,\n                public: false\n            },{\n                headers: {\n                    'Authorization': accessTokenBearer,\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                }\n            })\n            const id: string = response.data.id;\n            await axios({\n                method: 'post',\n                url: `https://api.spotify.com/v1/playlists/${id}/tracks`,\n                data: {\n                  uris: selectedTracks\n                },\n                headers: {\n                  'Authorization': accessTokenBearer,\n                  \"Accept\": \"application/json\",\n                  \"Content-Type\": \"application/json\"\n                }\n              })\n        } catch(error){\n            console.error(error);\n        }\n    }\n        \n\n    const handleTitle = (e: React.ChangeEvent<any>) => {\n        setTitle(e.target.value);\n    }\n\n    const handleDescription = (e: React.ChangeEvent<any>) => {\n        setDescription(e.target.value);\n    }\n    return (\n        <div>\n            <h3>Create Playlist</h3>\n            <form onSubmit={handleSubmit}>\n                <TextField className=\"textField\" variant=\"outlined\" label=\"Title\" onChange={handleTitle}/>\n                <TextField className=\"textField\" variant=\"outlined\" label=\"Description\" onChange={handleDescription}/>\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\">Submit</Button>\n            </form>\n        </div>\n    );\n}\n\nexport default CreatePlaylistForm;\n\nCreatePlaylistForm.propTypes = {\n    userId: PropTypes.string,\n    selectedTracks: PropTypes.array,\n}"]},"metadata":{},"sourceType":"module"}