{"ast":null,"code":"import _regeneratorRuntime from\"/Users/dennyrthaher/Documents/generasi-gigih-homework/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/dennyrthaher/Documents/generasi-gigih-homework/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/dennyrthaher/Documents/generasi-gigih-homework/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import{useState}from'react';import'./style.css';import axios from'axios';import{useSelector}from'react-redux';import{Button,TextField}from'@material-ui/core';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CreatePlaylistForm=function CreatePlaylistForm(_ref){var userId=_ref.userId,selectedTracks=_ref.selectedTracks;var _useSelector=useSelector(function(state){return state.token;}),accessTokenBearer=_useSelector.accessTokenBearer;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),title=_useState2[0],setTitle=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),description=_useState4[0],setDescription=_useState4[1];var handleSubmit=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){var endpoint,response,id;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:e.preventDefault();_context.prev=1;endpoint=\"https://api.spotify.com/v1/users/\".concat(userId,\"/playlists\");_context.next=5;return axios.post(endpoint,{name:title,description:description,collaborative:false,public:false},{headers:{'Authorization':accessTokenBearer,'Accept':'application/json','Content-Type':'application/json'}});case 5:response=_context.sent;id=response.data.id;_context.next=9;return axios({method:'post',url:\"https://api.spotify.com/v1/playlists/\".concat(id,\"/tracks\"),data:{uris:selectedTracks},headers:{'Authorization':accessTokenBearer,\"Accept\":\"application/json\",\"Content-Type\":\"application/json\"}});case 9:_context.next=14;break;case 11:_context.prev=11;_context.t0=_context[\"catch\"](1);console.error(_context.t0);case 14:case\"end\":return _context.stop();}}},_callee,null,[[1,11]]);}));return function handleSubmit(_x){return _ref2.apply(this,arguments);};}();var handleTitle=function handleTitle(e){setTitle(e.target.value);};var handleDescription=function handleDescription(e){setDescription(e.target.value);};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Create Playlist\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(TextField,{className:\"textField\",variant:\"outlined\",label:\"Title\",onChange:handleTitle}),/*#__PURE__*/_jsx(TextField,{className:\"textField\",variant:\"outlined\",label:\"Description\",onChange:handleDescription}),/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"contained\",color:\"primary\",children:\"Submit\"})]})]});};export default CreatePlaylistForm;","map":{"version":3,"sources":["/Users/dennyrthaher/Documents/generasi-gigih-homework/my-app/src/components/CreatePlaylistForm/index.tsx"],"names":["React","useState","axios","useSelector","Button","TextField","CreatePlaylistForm","userId","selectedTracks","state","token","accessTokenBearer","title","setTitle","description","setDescription","handleSubmit","e","preventDefault","endpoint","post","name","collaborative","public","headers","response","id","data","method","url","uris","console","error","handleTitle","target","value","handleDescription"],"mappings":"shBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,QAAT,KAAyB,OAAzB,CACA,MAAO,aAAP,CACA,MAAOC,CAAAA,KAAP,KAAqC,OAArC,CACA,OAASC,WAAT,KAA4B,aAA5B,CAEA,OAASC,MAAT,CAAiBC,SAAjB,KAAkC,mBAAlC,C,wFAOA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,MAAoC,IAAlCC,CAAAA,MAAkC,MAAlCA,MAAkC,CAA3BC,cAA2B,MAA3BA,cAA2B,CAE3D,iBAA4BL,WAAW,CAAC,SAACM,KAAD,QAAgBA,CAAAA,KAAK,CAACC,KAAtB,EAAD,CAAvC,CAAOC,iBAAP,cAAOA,iBAAP,CAEA,cAAyBV,QAAQ,CAAC,EAAD,CAAjC,wCAAOW,KAAP,eAAaC,QAAb,eACA,eAAqCZ,QAAQ,CAAC,EAAD,CAA7C,yCAAOa,WAAP,eAAmBC,cAAnB,eAEA,GAAMC,CAAAA,YAAY,2FAAG,iBAAOC,CAAP,2IACjBA,CAAC,CAACC,cAAF,GADiB,gBAGPC,QAHO,4CAGgDZ,MAHhD,qCAI8BL,CAAAA,KAAK,CAACkB,IAAN,CAAWD,QAAX,CAAoB,CAC3DE,IAAI,CAAET,KADqD,CAE3DE,WAAW,CAAEA,WAF8C,CAG3DQ,aAAa,CAAE,KAH4C,CAI3DC,MAAM,CAAE,KAJmD,CAApB,CAKzC,CACEC,OAAO,CAAE,CACL,gBAAiBb,iBADZ,CAEL,SAAU,kBAFL,CAGL,eAAgB,kBAHX,CADX,CALyC,CAJ9B,QAIPc,QAJO,eAgBPC,EAhBO,CAgBMD,QAAQ,CAACE,IAAT,CAAcD,EAhBpB,uBAiBPxB,CAAAA,KAAK,CAAC,CACR0B,MAAM,CAAE,MADA,CAERC,GAAG,gDAA0CH,EAA1C,WAFK,CAGRC,IAAI,CAAE,CACJG,IAAI,CAAEtB,cADF,CAHE,CAMRgB,OAAO,CAAE,CACP,gBAAiBb,iBADV,CAEP,SAAU,kBAFH,CAGP,eAAgB,kBAHT,CAND,CAAD,CAjBE,yFA8BboB,OAAO,CAACC,KAAR,cA9Ba,qEAAH,kBAAZhB,CAAAA,YAAY,6CAAlB,CAmCA,GAAMiB,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAAChB,CAAD,CAA+B,CAC/CJ,QAAQ,CAACI,CAAC,CAACiB,MAAF,CAASC,KAAV,CAAR,CACH,CAFD,CAIA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACnB,CAAD,CAA+B,CACrDF,cAAc,CAACE,CAAC,CAACiB,MAAF,CAASC,KAAV,CAAd,CACH,CAFD,CAGA,mBACI,oCACI,uCADJ,cAEI,cAAM,QAAQ,CAAEnB,YAAhB,wBACI,KAAC,SAAD,EAAW,SAAS,CAAC,WAArB,CAAiC,OAAO,CAAC,UAAzC,CAAoD,KAAK,CAAC,OAA1D,CAAkE,QAAQ,CAAEiB,WAA5E,EADJ,cAEI,KAAC,SAAD,EAAW,SAAS,CAAC,WAArB,CAAiC,OAAO,CAAC,UAAzC,CAAoD,KAAK,CAAC,aAA1D,CAAwE,QAAQ,CAAEG,iBAAlF,EAFJ,cAGI,KAAC,MAAD,EAAQ,IAAI,CAAC,QAAb,CAAsB,OAAO,CAAC,WAA9B,CAA0C,KAAK,CAAC,SAAhD,oBAHJ,GAFJ,GADJ,CAUH,CA3DD,CA6DA,cAAe9B,CAAAA,kBAAf","sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nimport './style.css';\nimport axios, { AxiosResponse } from 'axios';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Button, TextField } from '@material-ui/core';\n\ntype Props = {\n    userId: string,\n    selectedTracks: Array<string>\n}\n\nconst CreatePlaylistForm = ({userId,selectedTracks}: Props) => {\n\n    const {accessTokenBearer} = useSelector((state: any) => state.token)\n\n    const [title,setTitle] = useState(\"\");\n    const [description,setDescription] = useState(\"\");\n\n    const handleSubmit = async (e: React.ChangeEvent<any>) => {\n        e.preventDefault();\n        try {\n            const endpoint: string = `https://api.spotify.com/v1/users/${userId}/playlists`;\n            const response: AxiosResponse<any> = await axios.post(endpoint,{\n                name: title,\n                description: description,\n                collaborative: false,\n                public: false\n            },{\n                headers: {\n                    'Authorization': accessTokenBearer,\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                }\n            })\n            const id: string = response.data.id;\n            await axios({\n                method: 'post',\n                url: `https://api.spotify.com/v1/playlists/${id}/tracks`,\n                data: {\n                  uris: selectedTracks\n                },\n                headers: {\n                  'Authorization': accessTokenBearer,\n                  \"Accept\": \"application/json\",\n                  \"Content-Type\": \"application/json\"\n                }\n              })\n        } catch(error){\n            console.error(error);\n        }\n    }\n        \n\n    const handleTitle = (e: React.ChangeEvent<any>) => {\n        setTitle(e.target.value);\n    }\n\n    const handleDescription = (e: React.ChangeEvent<any>) => {\n        setDescription(e.target.value);\n    }\n    return (\n        <div>\n            <h3>Create Playlist</h3>\n            <form onSubmit={handleSubmit}>\n                <TextField className=\"textField\" variant=\"outlined\" label=\"Title\" onChange={handleTitle}/>\n                <TextField className=\"textField\" variant=\"outlined\" label=\"Description\" onChange={handleDescription}/>\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\">Submit</Button>\n            </form>\n        </div>\n    );\n}\n\nexport default CreatePlaylistForm;\n\nCreatePlaylistForm.propTypes = {\n    userId: PropTypes.string,\n    selectedTracks: PropTypes.array,\n}"]},"metadata":{},"sourceType":"module"}